#include "euler_lib.h"

const char *s[20] = {
    "0802229738150040007504050778521250779108",
    "4949994017811857608717409843694804566200",
    "8149317355791429937140675388300349133665",
    "5270952304601142692468560132567137023691",
    "2231167151676389419236542240402866331380",
    "2447326099034502447533537836842035171250",
    "3298812864236710263840675954706618386470",
    "6726206802621220956394396308409166499421",
    "2455580566739926971778789683148834896372",
    "2136230975007644204535140061339734313395",
    "7817532822753167159403800462161409535692",
    "1639054296353147555888240017542436298557",
    "8656004835718907054444374460215851541758",
    "1980816805944769287392138652177704895540",
    "0452088397359916079757321626267933279866",
    "8836688757622072034633674655123263935369",
    "0442167338253911249472180846293240627636",
    "2069364172302388346299698267598574043616",
    "2073352978319001743149714886811623570554",
    "0170547183515469169233486143520189196748"
};

const int delta[4][2] = {{0,1},{1,-1},{1,0},{1,1}};

int ref(int i, int j){
    return (s[i][2*j] - '0') * 10 + (s[i][2*j+1] - '0');
}

int main(){
    int max_val = 0;
    for(int i=0;i<20;i++){
        for(int j=0;j<20;j++){
            for(int k=0;k<4;k++){
                int di = delta[k][0], dj = delta[k][1];
                int ni = i + 3 * di, nj = j + 3 * dj;
                bool valid = (0 <= ni && ni < 20) && (0 <= nj && nj < 20);
                if(!valid) continue;
                int mult = 1;
                for(int l=0;l<4;l++){
                    int ni = i + l * di, nj = j + l * dj;
                    mult *= ref(ni, nj);
                }
                max_val = max(max_val, mult);
            }
        }
    }
    printf("%d\n", max_val);
    return 0;
}
